"use strict";const e={renderedTag:"div",featureTagName:"feature",tagAttributeName:"tag",nameAttributeName:"name",variantAttributeName:"variant",dataAttributeName:"data",displayAttributeName:"display",defaultDisplay:"block"};function t(e){return"boolean"==typeof e?function(){return e}:e}function i(e,t){var i=e.toLowerCase();return t&&"string"==typeof t&&(i+="#"+t.toLowerCase()),i}function n(e={}){const n={};return Object.keys(e).forEach((r=>{r.startsWith("_")||(n[i(r)]=t(e[r]))})),n}exports.htmlPlugin=function(t={}){function i(e,i){const n=e.getAttribute(t.tagAttributeName)||t.renderedTag,r=Array.from(e.attributes);let a="";r.forEach((e=>{a+=` ${e.nodeName}="${e.nodeValue.replace(/"/g,"&quot;")}"`}));const u=i?e.getAttribute(t.displayAttributeName)||t.defaultDisplay:"none";e.outerHTML=`<${n}  style="display:${u}" _feature="true" ${a}>${e.innerHTML}</${n}>`}return t=Object.assign({},e,t),function(e){return window.document.querySelectorAll(t.featureTagName).forEach((e=>{i(e,!1)})),e.on("visibilityrule",(function(n){var r=`[_feature][${t.nameAttributeName}="${n.name}"]`;n.variant&&(r+=`[${t.variantAttributeName}="${n.variant}"]`),document.querySelectorAll(r).forEach((r=>{const a=function(e){try{return JSON.parse(e)}catch(t){return isNaN(parseFloat(e))?e:parseFloat(e)}}(r.getAttribute(t.dataAttributeName));i(r,e.isVisible(n.name,n.variant,a))}))})),{name:"htmlplugin"}}},exports.urlPlugin=function(e={}){let t;return t=e.useMockedWindow?{isMocked:!0,decodeURIComponent:function(e){return e}}:window,e=Object.assign({},{url:t.isMocked?"":t.location.href,prefix:""},e),function(i){i.url=e.url;const n=function(e,t){var i={};if(!e)return[];var n=e.split("?");return n.length<2?[]:(n[1].split("&").forEach((function(e){var n=e.split("=");n[0]=t.decodeURIComponent(n[0]),n[1]="true"===t.decodeURIComponent(n[1]),i[n[0]]="undefined"===n[1]||n[1]})),i)}(e.url,t),r=e.prefix;return Object.keys(n).forEach((e=>{if(!e.startsWith(r))return;const t=e.replace(r,"");i.visibility(t,n[e])})),{name:"urlplugin"}}},exports.useFeatureToggle=function(e={},r={}){const a={datas:{},listeners:{},visibilities:n(e),showLogs:!1,usedPlugins:[]};function u(e,t){e(t)}function l(e,t){(a.listeners[e]||[]).forEach((e=>{e(t)}))}const o=function(e){if(a.showLogs)if("undefined"!=typeof window){var t=-1!=e.indexOf("<b>"),i=-1!=e.indexOf("visible"),n=-1!=e.indexOf("hidden"),r=e.replace("visible","%cvisible");if(r=r.replace("hidden","%chidden"),i)console.log(r,"color:green;font-weight:bold;");else if(n)console.log(r,"color:red;font-weight:bold;");else if(t){var u=[r=r.replace("<b>","%c"),"font-weight:bold;"];console.log.apply(null,u)}else console.log(e)}else{const t=e.replace(/<b>/g,"");console.log(t)}},s=function(e,t){return o(t),o(""),e},f=function(e,t,i,n,r){if(null!=e){var a=e({name:i,variant:n,data:r});return"boolean"==typeof a?a:s(!1,`The ${t} returns ${a}. => Please return true or false. This result (and all non-boolean results) will return false.`)}};function c(e,n,r,a){let u;return u={name:e,variant:n,data:r},u.key=i(u.name,u.variant),null==a||(u.visibilityFunction=t(a),u.result=u.visibilityFunction({name:u.name,variant:u.variant,data:u.data||{},_internalCall:!0,description:"When attaching a function, the result must be calculated internally. You can filter this out with the _internalCall:true -Flag."})),u}const d={name:"feature-toggle-api",setData:function(e,t,i){if(null==e)throw new Error("setData(): The name must of the feature must be defined, but ist undefined");const n=c(e,null!=i?t:void 0,i||t);a.datas[n.key]=n.data,l("visibilityrule",n)},on:function(e,t,i){a.listeners[e]=a.listeners[e]||[],a.listeners[e].push(t),l("registerEvent",{type:e}),null!=i&&i.ignorePreviousRules||Object.keys(a.visibilities).forEach((e=>{const i=function(e){const t=e.split("#");return{name:t[0],variant:t.length>1?t[1]:void 0,data:a.datas[e]}}(e),n=a.visibilities[e];i.result=n(i),t(i)}))},trigger:l,showLogs:function(e){a.showLogs=null==e||e},isVisible:function(e,t,n){const r=a.visibilities;if(o(`\nCheck Visibility of <b>Feature "${e}", variant "${null==t?"":t}"${n?" with data "+JSON.stringify(n):""}.`),null==e)throw new Error('The attribute "name" is required for tag <feature></feature>. Example: <feature name="aname"></feature>');var u=r._required,l=null!=r._required,c=f(u,"requiredVisibility",e,t,n),d=i(e,t),b=r[d],h=null!=r[d],y=f(b,"visibility function",e,t,n),g=null!=t,m=r[i(e,null)],p=f(m,"visibility function (only name)",e,t,n),v=r._default,w=null!=r._default,T=f(v,"defaultVisibility",e,t,n);if(l){if(l&&!0===c)o("The requiredVisibility rule returns true. This feature will be shown when no other rule rejects it.");else if(l&&!1===c)return s(!1,"The requiredVisibility rule returns false. This feature will be hidden.")}else o("No requiredVisibility rule specified for this feature.");return h?s(y,`The visibility rule returns ${y}. This feature will be ${y?"visible":"hidden"}.`):(o("No visibility rule found matching name and variant."),g&&"boolean"==typeof p?s(p,`Found a visibility rule for name ${e} without variants. The rule returns ${p}. => This feature will be ${p?"visible":"hidden"}.`):(g&&o(`No rules found for name ${e} without variants.`),w?s(T,`Found a defaultVisibility rule. The rule returns ${T}. => This feature will be ${T?"visible":"hidden"}.`):(o("No default rule found."),l?s(!0,"Only the requiredVisibility rule was found. This returned true. => This feature will be visible."):s(!1,"No rules were found. This feature will be hidden."))))},visibility:function(e,t,i,n){const r=function(e,t,i,n){if(null==e)throw new Error("feature.visibility(): 1st parameter name must be defined");if(1==arguments.length)throw new Error("feature.visibility(): 2nd parameter name must be a boolean or function, but is empty");let r=null,a=null,u=null;return null==i&&null==n?u=t:null==n?(r=t,u=i):(r=t,a=i,u=n),{name:e,variant:r,data:a,result:u}}(e,t,i,n),u=c(r.name,r.variant,r.data,r.result);a.visibilities[u.key]=u.visibilityFunction,a.datas[u.key]=u.data,l("visibilityrule",u)},requiredVisibility:function(e){if("function"!=typeof e)throw new Error("feature.requiredVisibility(): 1st parameter must be a function, but is "+typeof e);a.visibilities._required=t(e)},defaultVisibility:function(e){if("function"!=typeof e)throw new Error("feature.defaultVisibility(): 1st parameter must be a function, but is "+typeof e);a.visibilities._default=t(e)},addPlugin:function(e){a.usedPlugins.includes(e)||(u(e,d),a.usedPlugins.push(e))}};return function(e){if(r._plugins){if(!Array.isArray(r._plugins))throw new Error("featuretoggleapi()-constructor: config.plugins must be an array.");r._plugins.forEach((t=>{if("function"!=typeof t)throw new Error("featuretoggleapi()-constructor: config.plugins needs functions as entries, not "+typeof t+".");u(t,e)}))}l("init")}(d),d};
//# sourceMappingURL=feature-toggle.min.cjs.map
