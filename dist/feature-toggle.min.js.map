{"version":3,"file":"feature-toggle.min.js","sources":["../src/plugins/urlplugin/plugin-url.ts","../src/plugins/htmlplugin/plugin-html.ts","../src/featureToggle.ts"],"sourcesContent":["interface URLPluginConfig{\n    useMockedWindow?: boolean,\n    url?: string,\n    prefix?: string\n\n}\n\nfunction useWindowMock(){\n    return {\n        isMocked: true,\n        decodeURIComponent:function(param1){\n            return param1;\n        }\n    }\n}\n\ndeclare global {\n    interface Window {\n      isMocked: boolean\n    }\n  }\n\n  declare var window: Window;\n\nfunction parseValue(value){\n    if(value === 'true')\n        return true;\n    return false;\n}\n\nfunction getParams(url,window) {\n    var params = {};\n    if (!url) \n        return [];\n    \n    var urlparts = url.split(\"?\");\n\n    //no params available for url\n    if(urlparts.length < 2)\n        return [];\n\n    const parts = urlparts[1].split('&');\n\n    parts.forEach(function (part) {\n    var pair = part.split('=');\n    pair[0] = window.decodeURIComponent(pair[0]);\n    pair[1] = parseValue(window.decodeURIComponent(pair[1]));\n    params[pair[0]] = (pair[1] !== 'undefined') ?\n        pair[1] : true;\n    });\n\n    return params;\n  }\n\n function urlPlugin(config: URLPluginConfig={}) {\n    let _window;\n\n    if(config.useMockedWindow)\n        _window = useWindowMock();\n    else\n        _window = window;\n    \n    config = Object.assign({},{\n        url: _window.isMocked ? \"\" : _window.location.href,\n        prefix: \"\"\n    },config);\n\n    \n\n    return function(api){\n        api.url = config.url;\n        const urlparams = getParams(config.url,_window);\n        const prefix = config.prefix;\n\n        Object.keys(urlparams).forEach(key => {\n            if(!key.startsWith(prefix))\n                return;\n                \n            const keyWithoutPrefix = key.replace(prefix,\"\");\n            api.visibility(keyWithoutPrefix,urlparams[key]);\n        });\n\n        return {name: 'urlplugin'};\n    }\n\n}\n\nexport {\n    urlPlugin\n}","type Display = 'block' | 'inline-block' | 'inline' | 'flex' | 'inline-flex' | 'grid' | 'inline-grid';\n\ninterface HtmlPluginConfig {\n    renderedTag?: string,\n    featureTagName?: string,\n    tagAttributeName?: string,\n    nameAttributeName?:string,\n    variantAttributeName?: string,\n    dataAttributeName?: string,\n    displayAttributeName?: string,\n    defaultDisplay?: Display,\n}\n\n/*\n    creates a tag that is shown / hidden, depending on the visibility rules.\n    if not configured dynamically, it looks like this:\n    <feature name=\"featurename\" variant=\"variantname\" data=\"data\">content </feature>\n\n    Parameter: (config)\n    - config.featureTagName: name of the tag. Default: \"feature\"\n    - nameAttributeName: Name of the Name-Attribute: default: \"name\"\n    - variantAttributeName: Name of the Variant-Attribute: default: \"variant\"\n*/\nconst defaultparams :HtmlPluginConfig = {\n    renderedTag: 'div',\n    featureTagName: 'feature',\n    tagAttributeName: 'tag',\n    nameAttributeName:'name',\n    variantAttributeName: 'variant',\n    dataAttributeName: 'data',\n    displayAttributeName: 'display',\n    defaultDisplay: 'block',\n}\nfunction parseDataAttribute(attrAsString){\n    try{\n        return JSON.parse(attrAsString);\n    }\n    catch(e)\n    {\n        if(!isNaN(parseFloat(attrAsString)))\n            return parseFloat(attrAsString);\n        \n        return attrAsString;\n    }\n}\n\nfunction htmlPlugin(config :HtmlPluginConfig = {}) {\n    config = Object.assign({},defaultparams,config);\n\n    function renderFeatureTag(elem:HTMLElement,isVisible){\n        const tagname = elem.getAttribute(config.tagAttributeName) || config.renderedTag;\n        const attributes = Array.from(elem.attributes);\n        let attributesAsString = \"\";\n        attributes.forEach(attr => {\n            attributesAsString += ` ${attr.nodeName}=\"${attr.nodeValue.replace(/\"/g,\"&quot;\")}\"`;\n        });\n        const display = isVisible ? (elem.getAttribute(config.displayAttributeName) || config.defaultDisplay) : 'none';\n        elem.outerHTML = `<${tagname}  style=\"display:${display}\" _feature=\"true\" ${attributesAsString}>${elem.innerHTML}</${tagname}>`;\n    } \n    return function (api) {\n        var renderedTags :NodeListOf<HTMLElement> = window.document.querySelectorAll(config.featureTagName);\n        renderedTags.forEach(tag => { renderFeatureTag(tag,false) });\n\n        api.on('visibilityrule', function (event) {\n            var selector = `[_feature][${config.nameAttributeName}=\"${event.name}\"]`;\n            if (event.variant) selector += `[${config.variantAttributeName}=\"${event.variant}\"]`;\n            var elements :NodeListOf<HTMLElement> = document.querySelectorAll(selector);\n            elements.forEach(elem => { \n                const dataAsString = elem.getAttribute(config.dataAttributeName);\n                const data = parseDataAttribute(dataAsString);\n                \n                const isVisible = api.isVisible(event.name,event.variant,data);\n                renderFeatureTag(elem, isVisible);\n            });\n        })\n\n        return { name: 'htmlplugin' };\n    }\n}\n\nexport {\n    htmlPlugin\n}","interface OnConfiguration {\n    ignorePreviousRules: boolean\n}\ntype Plugin = (api) => void;\n\ninterface OnEvent {\n    name: string,\n    variant: string,\n    data: any,\n    result?: boolean\n}\n\ntype FirstCharOfFeatureFlagKey = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' |\n    'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' |\n    'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' |\n    'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'\ntype FeatureFlagKey = `${FirstCharOfFeatureFlagKey}${string}`;\n\ninterface FeatureToggleConfig {\n    [key: FeatureFlagKey]: boolean | (() => boolean),\n    $plugins?: Plugin[]\n    /**\n     * @deprecated Use key`$plugins` instead.\n     */\n    _plugins?: Plugin[]\n}\n\ninterface Rule {\n    name: string,\n    variant: string,\n    data: any,\n    _internalCall?: true,\n    description?: string\n}\n\ninterface FeatureToggleApi {\n    name: string,\n    setData(name: string, dataParam?: any): void;\n    setData(name: string, variant: string, dataParam?: any): void,\n    setData(nameParam: string, variantOrDataParam: string | { [key: string]: any },\n        dataParam?: any): void;\n\n    on(eventType: string, fn: (event: OnEvent) => void, config?: OnConfiguration): void;\n    trigger(eventtype: string, param?: any);\n    showLogs(showLogs?: boolean): void\n\n    isVisible(name: string, variant?: string, data?: any): boolean\n\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, result: boolean | ((rule: Rule) => boolean)): void,\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, variant: string | null, result: boolean | ((rule: Rule) => boolean)): void\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, variant: string | null, data: any, result: boolean | ((rule: Rule) => boolean)): void,\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, resultOrVariant: string | null | boolean | ((rule: Rule) => boolean), resultOrData?: any, result?: boolean | (() => boolean)): void\n\n    setFlag(name: string, result: boolean | ((rule: Rule) => boolean)): void,\n    setFlag(name: string, variant: string | null, result: boolean | ((rule: Rule) => boolean)): void,\n    setFlag(name: string, variant: string | null, data: any, result: boolean | ((rule: Rule) => boolean)): void,\n    setFlag(name: string, resultOrVariant: string | null | boolean | ((rule: Rule) => boolean), resultOrData?: any, result?: boolean | (() => boolean)): void\n\n    /**\n     * @deprecated Use `featureToggle.setRequiredFlag` instead.\n     */\n    requiredVisibility(fn: boolean | ((result: Rule) => boolean)): void\n\n    /**\n     * @deprecated Use `featureToggle.setDefaultFlag` instead.\n     */\n    defaultVisibility(fn: boolean | ((result: Rule) => boolean)): void\n\n    /**\n     * This rule will run first and only if it is true, the feature.setFlag() - rules apply.\n     * In other words: if the required-rule returns false, all feature.setFlag-rules return false - regardless of its normal result.\n     * @param fn \n     */\n    setRequiredFlag(fn: boolean | ((result: Rule) => boolean)): void\n\n    /**\n     * This is the default-rule and will be overwritten by feature.setFlag() - rules.\n     * In other words: If feature.setFlag == false, the result of the defaultRule applies.\n     * @param fn DefaultRule\n     */\n    setDefaultFlag(fn: boolean | ((result: Rule) => boolean)): void\n\n    addPlugin(plugin: Plugin)\n}\n\nfunction parseToFn(fnOrBool: boolean | ((param?: any) => boolean)) {\n    if (typeof fnOrBool == 'boolean')\n        return function () { return fnOrBool };\n\n    return fnOrBool;\n}\n\nfunction getKey(name: string, variant?: string): string {\n    var _name = name.toLowerCase();\n    if (variant && typeof variant == 'string') {\n        _name += \"#\" + variant.toLowerCase();\n    }\n\n    return _name;\n}\n\nfunction initVisibilities(visibilities: FeatureToggleConfig = {}) {\n    const returnVisibilities = {};\n    Object.keys(visibilities).forEach(key => {\n        if (key.startsWith('_') || key.startsWith('$'))\n            return;\n        returnVisibilities[getKey(key)] = parseToFn(visibilities[key]);\n    });\n    return returnVisibilities;\n}\n\nfunction useFeatureToggle(config: FeatureToggleConfig = {}): FeatureToggleApi {\n\n    const globals = {\n        datas: {},\n        listeners: {},\n        visibilities: initVisibilities(config),\n        showLogs: false,\n        usedPlugins: [],\n    }\n\n    function init(api) {\n        const allPlugins = [...(config.$plugins||[]),...(config._plugins||[])];\n        if(config._plugins){\n            console.log('useFeatureToggle({_plugins:[]}): Key _plugins is deprecated. Use $plugins instead. This attribute will be removed in one of the next major versions.');\n        }\n\n\n        if (allPlugins.length) {\n            allPlugins.forEach(plugin => {\n                if (typeof plugin !== 'function')\n                    throw new Error('featuretoggleapi()-constructor: config.plugins needs functions as entries, not ' + typeof plugin + '.');\n\n                plugin(api);\n            });\n        }\n\n        triggerEvent('init');\n    }\n\n    function triggerEvent(eventtype: string, param?: any) {\n        (globals.listeners[eventtype] || []).forEach(listener => {\n            listener(param);\n        });\n    }\n\n    const log = function (message) {\n        if (!globals.showLogs)\n            return;\n\n        //Nur Browser können Syntaxhighlighting die anderen geben die Nachricht einfach aus und schneiden\n        //die styletags raus\n        if (typeof window === 'undefined') {\n            const loggedMessage = message.replace(/<b>/g, \"\");\n            console.log(loggedMessage);\n            return;\n        }\n\n        var hasBoldTag = message.indexOf('<b>') != -1;\n        var hasVisibleKeyword = message.indexOf('visible') != -1;\n        var hasHiddenKeyword = message.indexOf('hidden') != -1;\n\n        var _message = message.replace('visible', '%cvisible');\n        _message = _message.replace('hidden', '%chidden');\n\n        if (hasVisibleKeyword)\n            console.log(_message, \"color:green;font-weight:bold;\");\n        else if (hasHiddenKeyword)\n            console.log(_message, \"color:red;font-weight:bold;\");\n        else if (hasBoldTag) {\n            _message = _message.replace('<b>', '%c');\n            var parts = [_message, 'font-weight:bold;']\n            console.log.apply(null, parts);\n        }\n        else\n            console.log(message);\n    }\n\n    const logAndReturn = function (returnValue, message) {\n        log(message);\n        log('');\n        return returnValue;\n    }\n\n    const getVisibility = function (visibilityFn, functionname, name, variant, data) {\n        if (visibilityFn == null)\n            return undefined;\n\n        var calculatedVisibility = visibilityFn({ name: name, variant: variant, data: data });\n\n        if (typeof calculatedVisibility == 'boolean') {\n            return calculatedVisibility;\n        }\n\n        return logAndReturn(false, `The ${functionname} returns ${calculatedVisibility}. => Please return true or false. This result (and all non-boolean results) will return false.`);\n    }\n\n    function parseKey(key: string): OnEvent {\n        const parts = key.split('#');\n        return {\n            name: parts[0],\n            variant: parts.length > 1 ? parts[1] : undefined,\n            data: globals.datas[key],\n        }\n    }\n\n    /*\n        the following calls are possible:\n        visibility(name,result);\n        visibility(name,variant,result);\n        visibility(name,variant,data,result);\n    \n        =>\n        param1: name\n        param2: result || variant\n        param3: result || data\n        param4: result\n    */\n    function visibilityFnParams(param1, param2, param3, param4) {\n        //name must always be set\n        if (param1 == undefined)\n            throw new Error('feature.visibility(): 1st parameter name must be defined');\n\n        if (arguments.length == 1)\n            throw new Error('feature.visibility(): 2nd parameter name must be a boolean or function, but is empty');\n\n        let name = param1, variant = null, data = null, result = null;\n        if (param3 == undefined && param4 == undefined) {\n            result = param2;\n        }\n        else if (param4 == undefined) {\n            variant = param2;\n            result = param3;\n        }\n        else {\n            variant = param2;\n            data = param3;\n            result = param4;\n        }\n\n        return {\n            name,\n            variant,\n            data,\n            result\n        }\n    }\n\n    function getEvent(name: string, variant: string, data?, result?: any) {\n\n        let event;\n\n        event = { name, variant, data };\n\n        event.key = getKey(event.name, event.variant);\n\n        if (result == null)\n            return event;\n\n        event.visibilityFunction = parseToFn(result);\n        event.result = event.visibilityFunction({\n            name: event.name,\n            variant: event.variant,\n            data: event.data || {},\n            _internalCall: true,\n            description: 'When attaching a function, the result must be calculated internally. You can filter this out with the _internalCall:true -Flag.'\n        })\n        return event;\n    }\n\n\n\n    function isVisible(name: string, variant?: string, data?: any): boolean {\n        const visibilities = globals.visibilities;\n\n        log(`\\nCheck Visibility of <b>Feature \"${name}\", variant \"${variant == undefined ? '' : variant}\"${data ? \" with data \" + JSON.stringify(data) : \"\"}.`);\n        if (name == undefined)\n            throw new Error('The attribute \"name\" is required for tag <feature></feature>. Example: <feature name=\"aname\"></feature>');\n\n        var requiredFn = visibilities['_required'];\n        var requiredFnExists = visibilities['_required'] != null;\n        var requiredFnResult = getVisibility(requiredFn, 'requiredVisibility', name, variant, data);\n\n        var visibilityFnKey = getKey(name, variant);\n        var visibilityFn = visibilities[visibilityFnKey];\n        var visibilityFnExists = visibilities[visibilityFnKey] != null;\n        var visibilityFnResult = getVisibility(visibilityFn, 'visibility function', name, variant, data);\n\n        var variantExists = variant != null;\n        var visibilityOnlyNameFnKey = getKey(name, null);\n        var visibilityOnlyNameFn = visibilities[visibilityOnlyNameFnKey];\n        var visibilityOnlyNameFnExists = visibilities[visibilityOnlyNameFnKey] != null;\n        var visibilityOnlyNameFnResult = getVisibility(visibilityOnlyNameFn, 'visibility function (only name)', name, variant, data);\n\n        var defaultFn = visibilities['_default'];\n        var defaultFnExists = visibilities['_default'] != null;\n        var defaultFnResult = getVisibility(defaultFn, 'defaultVisibility', name, variant, data);\n\n        if (!requiredFnExists)\n            log(\"No requiredVisibility rule specified for this feature.\");\n        else if (requiredFnExists && requiredFnResult === true)\n            log(\"The requiredVisibility rule returns true. This feature will be shown when no other rule rejects it.\")\n        else if (requiredFnExists && requiredFnResult === false)\n            return logAndReturn(false, \"The requiredVisibility rule returns false. This feature will be hidden.\");\n\n        if (visibilityFnExists)\n            return logAndReturn(visibilityFnResult, `The visibility rule returns ${visibilityFnResult}. This feature will be ${visibilityFnResult ? 'visible' : 'hidden'}.`);\n        log('No visibility rule found matching name and variant.');\n\n        if (variantExists && typeof visibilityOnlyNameFnResult == 'boolean')\n            return logAndReturn(visibilityOnlyNameFnResult, `Found a visibility rule for name ${name} without variants. The rule returns ${visibilityOnlyNameFnResult}. => This feature will be ${visibilityOnlyNameFnResult ? 'visible' : 'hidden'}.`);\n        else if (variantExists)\n            log(`No rules found for name ${name} without variants.`)\n\n\n        if (defaultFnExists)\n            return logAndReturn(defaultFnResult, `Found a defaultVisibility rule. The rule returns ${defaultFnResult}. => This feature will be ${defaultFnResult ? 'visible' : 'hidden'}.`);\n        log(`No default rule found.`)\n\n        if (requiredFnExists)\n            return logAndReturn(true, `Only the requiredVisibility rule was found. This returned true. => This feature will be visible.`);\n\n        return logAndReturn(false, 'No rules were found. This feature will be hidden.');\n    }\n\n    const api: FeatureToggleApi = {\n        name: 'feature-toggle-api',\n        setData: function (nameParam, variantOrDataParam, dataParam?): void {\n            if (nameParam == undefined)\n                throw new Error('setData(): The name must of the feature must be defined, but ist undefined');\n\n            const variant = (dataParam != undefined ? variantOrDataParam : undefined) as string;\n            const data = dataParam || variantOrDataParam;\n\n            const event = getEvent(nameParam, variant, data);\n\n            globals.datas[event.key] = event.data;\n\n            triggerEvent('visibilityrule', event);\n        },\n        on: function (eventtype: string, fn, config?) {\n            globals.listeners[eventtype] = globals.listeners[eventtype] || [];\n            globals.listeners[eventtype].push(fn);\n\n            triggerEvent('registerEvent', {\n                type: eventtype\n            })\n            if (config != undefined && config.ignorePreviousRules)\n                return;\n\n            \n            Object.keys(globals.visibilities).forEach(key => {\n                const event = parseKey(key);\n                const rule = globals.visibilities[key];\n                event.result = rule(event);\n                fn(event);\n            });\n        },\n        trigger: triggerEvent,\n        showLogs: function (showLogs?: boolean): void {\n            globals.showLogs = showLogs == undefined ? true : showLogs;\n        },\n        isVisible,\n\n        /**\n            the following function calls are possible:\n            visibility(name,result);\n            visibility(name,variant,result);\n            visibility(name,variant,data,result);\n         */\n        setFlag(name, resultOrVariant, resultOrData?, result?) {\n            const params = visibilityFnParams(name, resultOrVariant, resultOrData, result);\n            const event = getEvent(params.name, params.variant, params.data, params.result);\n\n            globals.visibilities[event.key] = event.visibilityFunction;\n            globals.datas[event.key] = event.data;\n            triggerEvent('visibilityrule', event);\n        },\n        visibility: function (name, resultOrVariant, resultOrData?, result?) {\n            console.log('featureToggle.visibility is deprecated. use featureToggle.setVisibility instead. This function will be removed in one of the next major versions.');\n\n            api.setFlag(name, resultOrVariant, resultOrData, result);\n        },\n        requiredVisibility: function (fn) {\n            console.log('featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions.');\n\n            api.setRequiredFlag(fn);\n        },\n        defaultVisibility: function (fn) {\n            console.log('featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions.');\n\n            api.setDefaultFlag(fn);\n        },\n        setRequiredFlag(fn) {\n            if (typeof fn != \"function\")\n                throw new Error('feature.setRequiredFlag(): 1st parameter must be a function, but is ' + typeof fn);\n\n            globals.visibilities['_required'] = parseToFn(fn);\n        },\n        setDefaultFlag(fn) {\n            if (typeof fn != \"function\")\n                throw new Error('feature.defaultVisibility(): 1st parameter must be a function, but is ' + typeof fn);\n\n            globals.visibilities['_default'] = parseToFn(fn);\n        },\n        addPlugin: function (plugin) {\n            if (globals.usedPlugins.includes(plugin))\n                return;\n\n            plugin(api);\n\n            globals.usedPlugins.push(plugin);\n        },\n    };\n    init(api);\n\n    return api;\n}\n\nexport default useFeatureToggle;"],"names":["urlPlugin","config","_window","useMockedWindow","isMocked","decodeURIComponent","param1","window","Object","assign","url","location","href","prefix","api","urlparams","params","urlparts","split","length","forEach","part","pair","getParams","keys","key","startsWith","keyWithoutPrefix","replace","visibility","name","defaultparams","renderedTag","featureTagName","tagAttributeName","nameAttributeName","variantAttributeName","dataAttributeName","displayAttributeName","defaultDisplay","htmlPlugin","renderFeatureTag","elem","isVisible","tagname","getAttribute","attributes","Array","from","attributesAsString","attr","nodeName","nodeValue","display","outerHTML","innerHTML","document","querySelectorAll","tag","on","event","selector","variant","data","attrAsString","JSON","parse","e","isNaN","parseFloat","parseDataAttribute","parseToFn","fnOrBool","getKey","_name","toLowerCase","initVisibilities","visibilities","returnVisibilities","useFeatureToggle","globals","datas","listeners","showLogs","usedPlugins","triggerEvent","eventtype","param","listener","log","message","hasBoldTag","indexOf","hasVisibleKeyword","hasHiddenKeyword","_message","console","parts","apply","loggedMessage","logAndReturn","returnValue","getVisibility","visibilityFn","functionname","calculatedVisibility","getEvent","result","visibilityFunction","_internalCall","description","setData","nameParam","variantOrDataParam","dataParam","undefined","Error","fn","push","type","ignorePreviousRules","parseKey","rule","trigger","stringify","requiredFn","requiredFnExists","requiredFnResult","visibilityFnKey","visibilityFnExists","visibilityFnResult","variantExists","visibilityOnlyNameFn","visibilityOnlyNameFnResult","defaultFn","defaultFnExists","defaultFnResult","setFlag","resultOrVariant","resultOrData","param2","param3","param4","arguments","visibilityFnParams","requiredVisibility","setRequiredFlag","defaultVisibility","setDefaultFlag","addPlugin","plugin","includes","allPlugins","$plugins","_plugins","init"],"mappings":"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"}