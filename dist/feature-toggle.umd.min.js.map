{"version":3,"file":"feature-toggle.umd.min.js","sources":["../src/featureToggle.ts"],"sourcesContent":["interface OnConfiguration {\n    ignorePreviousRules: boolean\n}\ntype Plugin = (api) => void;\n\ninterface OnEvent {\n    name: string,\n    variant: string,\n    data: any,\n    result?: boolean\n}\n\ntype FirstCharOfFeatureFlagKey = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' |\n    'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' |\n    'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' |\n    'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z'\ntype FeatureFlagKey = `${FirstCharOfFeatureFlagKey}${string}`;\n\ninterface FeatureToggleConfig {\n    [key: FeatureFlagKey]: boolean | (() => boolean),\n    $plugins?: Plugin[]\n    /**\n     * @deprecated Use key`$plugins` instead.\n     */\n    _plugins?: Plugin[]\n}\n\ninterface Rule {\n    name: string,\n    variant: string,\n    data: any,\n    _internalCall?: true,\n    description?: string\n}\n\ninterface FeatureToggleApi {\n    name: string,\n    setData(name: string, dataParam?: any): void;\n    setData(name: string, variant: string, dataParam?: any): void,\n    setData(nameParam: string, variantOrDataParam: string | { [key: string]: any },\n        dataParam?: any): void;\n\n    on(eventType: string, fn: (event: OnEvent) => void, config?: OnConfiguration): void;\n    trigger(eventtype: string, param?: any);\n    showLogs(showLogs?: boolean): void\n\n    isVisible(name: string, variant?: string, data?: any): boolean\n\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, result: boolean | ((rule: Rule) => boolean)): void,\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, variant: string | null, result: boolean | ((rule: Rule) => boolean)): void\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, variant: string | null, data: any, result: boolean | ((rule: Rule) => boolean)): void,\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name: string, resultOrVariant: string | null | boolean | ((rule: Rule) => boolean), resultOrData?: any, result?: boolean | (() => boolean)): void\n\n    setFlag(name: string, result: boolean | ((rule: Rule) => boolean)): void,\n    setFlag(name: string, variant: string | null, result: boolean | ((rule: Rule) => boolean)): void,\n    setFlag(name: string, variant: string | null, data: any, result: boolean | ((rule: Rule) => boolean)): void,\n    setFlag(name: string, resultOrVariant: string | null | boolean | ((rule: Rule) => boolean), resultOrData?: any, result?: boolean | (() => boolean)): void\n\n    /**\n     * @deprecated Use `featureToggle.setRequiredFlag` instead.\n     */\n    requiredVisibility(fn: boolean | ((result: Rule) => boolean)): void\n\n    /**\n     * @deprecated Use `featureToggle.setDefaultFlag` instead.\n     */\n    defaultVisibility(fn: boolean | ((result: Rule) => boolean)): void\n\n    /**\n     * This rule will run first and only if it is true, the feature.setFlag() - rules apply.\n     * In other words: if the required-rule returns false, all feature.setFlag-rules return false - regardless of its normal result.\n     * @param fn \n     */\n    setRequiredFlag(fn: boolean | ((result: Rule) => boolean)): void\n\n    /**\n     * This is the default-rule and will be overwritten by feature.setFlag() - rules.\n     * In other words: If feature.setFlag == false, the result of the defaultRule applies.\n     * @param fn DefaultRule\n     */\n    setDefaultFlag(fn: boolean | ((result: Rule) => boolean)): void\n\n    addPlugin(plugin: Plugin)\n}\n\nfunction parseToFn(fnOrBool: boolean | ((param?: any) => boolean)) {\n    if (typeof fnOrBool == 'boolean')\n        return function () { return fnOrBool };\n\n    return fnOrBool;\n}\n\nfunction getKey(name: string, variant?: string): string {\n    var _name = name.toLowerCase();\n    if (variant && typeof variant == 'string') {\n        _name += \"#\" + variant.toLowerCase();\n    }\n\n    return _name;\n}\n\nfunction initVisibilities(visibilities: FeatureToggleConfig = {}) {\n    const returnVisibilities = {};\n    Object.keys(visibilities).forEach(key => {\n        if (key.startsWith('_') || key.startsWith('$'))\n            return;\n        returnVisibilities[getKey(key)] = parseToFn(visibilities[key]);\n    });\n    return returnVisibilities;\n}\n\nfunction useFeatureToggle(config: FeatureToggleConfig = {}): FeatureToggleApi {\n\n    const globals = {\n        datas: {},\n        listeners: {},\n        visibilities: initVisibilities(config),\n        showLogs: false,\n        usedPlugins: [],\n    }\n\n    function init(api) {\n        const allPlugins = [...(config.$plugins||[]),...(config._plugins||[])];\n        if(config._plugins){\n            console.log('useFeatureToggle({_plugins:[]}): Key _plugins is deprecated. Use $plugins instead. This attribute will be removed in one of the next major versions.');\n        }\n\n\n        if (allPlugins.length) {\n            allPlugins.forEach(plugin => {\n                if (typeof plugin !== 'function')\n                    throw new Error('featuretoggleapi()-constructor: config.plugins needs functions as entries, not ' + typeof plugin + '.');\n\n                plugin(api);\n            });\n        }\n\n        triggerEvent('init');\n    }\n\n    function triggerEvent(eventtype: string, param?: any) {\n        (globals.listeners[eventtype] || []).forEach(listener => {\n            listener(param);\n        });\n    }\n\n    const log = function (message) {\n        if (!globals.showLogs)\n            return;\n\n        //Nur Browser k√∂nnen Syntaxhighlighting die anderen geben die Nachricht einfach aus und schneiden\n        //die styletags raus\n        if (typeof window === 'undefined') {\n            const loggedMessage = message.replace(/<b>/g, \"\");\n            console.log(loggedMessage);\n            return;\n        }\n\n        var hasBoldTag = message.indexOf('<b>') != -1;\n        var hasVisibleKeyword = message.indexOf('visible') != -1;\n        var hasHiddenKeyword = message.indexOf('hidden') != -1;\n\n        var _message = message.replace('visible', '%cvisible');\n        _message = _message.replace('hidden', '%chidden');\n\n        if (hasVisibleKeyword)\n            console.log(_message, \"color:green;font-weight:bold;\");\n        else if (hasHiddenKeyword)\n            console.log(_message, \"color:red;font-weight:bold;\");\n        else if (hasBoldTag) {\n            _message = _message.replace('<b>', '%c');\n            var parts = [_message, 'font-weight:bold;']\n            console.log.apply(null, parts);\n        }\n        else\n            console.log(message);\n    }\n\n    const logAndReturn = function (returnValue, message) {\n        log(message);\n        log('');\n        return returnValue;\n    }\n\n    const getVisibility = function (visibilityFn, functionname, name, variant, data) {\n        if (visibilityFn == null)\n            return undefined;\n\n        var calculatedVisibility = visibilityFn({ name: name, variant: variant, data: data });\n\n        if (typeof calculatedVisibility == 'boolean') {\n            return calculatedVisibility;\n        }\n\n        return logAndReturn(false, `The ${functionname} returns ${calculatedVisibility}. => Please return true or false. This result (and all non-boolean results) will return false.`);\n    }\n\n    function parseKey(key: string): OnEvent {\n        const parts = key.split('#');\n        return {\n            name: parts[0],\n            variant: parts.length > 1 ? parts[1] : undefined,\n            data: globals.datas[key],\n        }\n    }\n\n    /*\n        the following calls are possible:\n        visibility(name,result);\n        visibility(name,variant,result);\n        visibility(name,variant,data,result);\n    \n        =>\n        param1: name\n        param2: result || variant\n        param3: result || data\n        param4: result\n    */\n    function visibilityFnParams(param1, param2, param3, param4) {\n        //name must always be set\n        if (param1 == undefined)\n            throw new Error('feature.visibility(): 1st parameter name must be defined');\n\n        if (arguments.length == 1)\n            throw new Error('feature.visibility(): 2nd parameter name must be a boolean or function, but is empty');\n\n        let name = param1, variant = null, data = null, result = null;\n        if (param3 == undefined && param4 == undefined) {\n            result = param2;\n        }\n        else if (param4 == undefined) {\n            variant = param2;\n            result = param3;\n        }\n        else {\n            variant = param2;\n            data = param3;\n            result = param4;\n        }\n\n        return {\n            name,\n            variant,\n            data,\n            result\n        }\n    }\n\n    function getEvent(name: string, variant: string, data?, result?: any) {\n\n        let event;\n\n        event = { name, variant, data };\n\n        event.key = getKey(event.name, event.variant);\n\n        if (result == null)\n            return event;\n\n        event.visibilityFunction = parseToFn(result);\n        event.result = event.visibilityFunction({\n            name: event.name,\n            variant: event.variant,\n            data: event.data || {},\n            _internalCall: true,\n            description: 'When attaching a function, the result must be calculated internally. You can filter this out with the _internalCall:true -Flag.'\n        })\n        return event;\n    }\n\n\n\n    function isVisible(name: string, variant?: string, data?: any): boolean {\n        const visibilities = globals.visibilities;\n\n        log(`\\nCheck Visibility of <b>Feature \"${name}\", variant \"${variant == undefined ? '' : variant}\"${data ? \" with data \" + JSON.stringify(data) : \"\"}.`);\n        if (name == undefined)\n            throw new Error('The attribute \"name\" is required for tag <feature></feature>. Example: <feature name=\"aname\"></feature>');\n\n        var requiredFn = visibilities['_required'];\n        var requiredFnExists = visibilities['_required'] != null;\n        var requiredFnResult = getVisibility(requiredFn, 'requiredVisibility', name, variant, data);\n\n        var visibilityFnKey = getKey(name, variant);\n        var visibilityFn = visibilities[visibilityFnKey];\n        var visibilityFnExists = visibilities[visibilityFnKey] != null;\n        var visibilityFnResult = getVisibility(visibilityFn, 'visibility function', name, variant, data);\n\n        var variantExists = variant != null;\n        var visibilityOnlyNameFnKey = getKey(name, null);\n        var visibilityOnlyNameFn = visibilities[visibilityOnlyNameFnKey];\n        var visibilityOnlyNameFnExists = visibilities[visibilityOnlyNameFnKey] != null;\n        var visibilityOnlyNameFnResult = getVisibility(visibilityOnlyNameFn, 'visibility function (only name)', name, variant, data);\n\n        var defaultFn = visibilities['_default'];\n        var defaultFnExists = visibilities['_default'] != null;\n        var defaultFnResult = getVisibility(defaultFn, 'defaultVisibility', name, variant, data);\n\n        if (!requiredFnExists)\n            log(\"No requiredVisibility rule specified for this feature.\");\n        else if (requiredFnExists && requiredFnResult === true)\n            log(\"The requiredVisibility rule returns true. This feature will be shown when no other rule rejects it.\")\n        else if (requiredFnExists && requiredFnResult === false)\n            return logAndReturn(false, \"The requiredVisibility rule returns false. This feature will be hidden.\");\n\n        if (visibilityFnExists)\n            return logAndReturn(visibilityFnResult, `The visibility rule returns ${visibilityFnResult}. This feature will be ${visibilityFnResult ? 'visible' : 'hidden'}.`);\n        log('No visibility rule found matching name and variant.');\n\n        if (variantExists && typeof visibilityOnlyNameFnResult == 'boolean')\n            return logAndReturn(visibilityOnlyNameFnResult, `Found a visibility rule for name ${name} without variants. The rule returns ${visibilityOnlyNameFnResult}. => This feature will be ${visibilityOnlyNameFnResult ? 'visible' : 'hidden'}.`);\n        else if (variantExists)\n            log(`No rules found for name ${name} without variants.`)\n\n\n        if (defaultFnExists)\n            return logAndReturn(defaultFnResult, `Found a defaultVisibility rule. The rule returns ${defaultFnResult}. => This feature will be ${defaultFnResult ? 'visible' : 'hidden'}.`);\n        log(`No default rule found.`)\n\n        if (requiredFnExists)\n            return logAndReturn(true, `Only the requiredVisibility rule was found. This returned true. => This feature will be visible.`);\n\n        return logAndReturn(false, 'No rules were found. This feature will be hidden.');\n    }\n\n    const api: FeatureToggleApi = {\n        name: 'feature-toggle-api',\n        setData: function (nameParam, variantOrDataParam, dataParam?): void {\n            if (nameParam == undefined)\n                throw new Error('setData(): The name must of the feature must be defined, but ist undefined');\n\n            const variant = (dataParam != undefined ? variantOrDataParam : undefined) as string;\n            const data = dataParam || variantOrDataParam;\n\n            const event = getEvent(nameParam, variant, data);\n\n            globals.datas[event.key] = event.data;\n\n            triggerEvent('visibilityrule', event);\n        },\n        on: function (eventtype: string, fn, config?) {\n            globals.listeners[eventtype] = globals.listeners[eventtype] || [];\n            globals.listeners[eventtype].push(fn);\n\n            triggerEvent('registerEvent', {\n                type: eventtype\n            })\n            if (config != undefined && config.ignorePreviousRules)\n                return;\n\n            \n            Object.keys(globals.visibilities).forEach(key => {\n                const event = parseKey(key);\n                const rule = globals.visibilities[key];\n                event.result = rule(event);\n                fn(event);\n            });\n        },\n        trigger: triggerEvent,\n        showLogs: function (showLogs?: boolean): void {\n            globals.showLogs = showLogs == undefined ? true : showLogs;\n        },\n        isVisible,\n\n        /**\n            the following function calls are possible:\n            visibility(name,result);\n            visibility(name,variant,result);\n            visibility(name,variant,data,result);\n         */\n        setFlag(name, resultOrVariant, resultOrData?, result?) {\n            const params = visibilityFnParams(name, resultOrVariant, resultOrData, result);\n            const event = getEvent(params.name, params.variant, params.data, params.result);\n\n            globals.visibilities[event.key] = event.visibilityFunction;\n            globals.datas[event.key] = event.data;\n            triggerEvent('visibilityrule', event);\n        },\n        visibility: function (name, resultOrVariant, resultOrData?, result?) {\n            console.log('featureToggle.visibility is deprecated. use featureToggle.setVisibility instead. This function will be removed in one of the next major versions.');\n\n            api.setFlag(name, resultOrVariant, resultOrData, result);\n        },\n        requiredVisibility: function (fn) {\n            console.log('featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions.');\n\n            api.setRequiredFlag(fn);\n        },\n        defaultVisibility: function (fn) {\n            console.log('featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions.');\n\n            api.setDefaultFlag(fn);\n        },\n        setRequiredFlag(fn) {\n            if (typeof fn != \"function\")\n                throw new Error('feature.setRequiredFlag(): 1st parameter must be a function, but is ' + typeof fn);\n\n            globals.visibilities['_required'] = parseToFn(fn);\n        },\n        setDefaultFlag(fn) {\n            if (typeof fn != \"function\")\n                throw new Error('feature.defaultVisibility(): 1st parameter must be a function, but is ' + typeof fn);\n\n            globals.visibilities['_default'] = parseToFn(fn);\n        },\n        addPlugin: function (plugin) {\n            if (globals.usedPlugins.includes(plugin))\n                return;\n\n            plugin(api);\n\n            globals.usedPlugins.push(plugin);\n        },\n    };\n    init(api);\n\n    return api;\n}\n\nexport default useFeatureToggle;"],"names":["parseToFn","fnOrBool","getKey","name","variant","_name","toLowerCase","initVisibilities","visibilities","returnVisibilities","Object","keys","forEach","key","startsWith","config","globals","datas","listeners","showLogs","usedPlugins","triggerEvent","eventtype","param","listener","log","message","window","hasBoldTag","indexOf","hasVisibleKeyword","hasHiddenKeyword","_message","replace","console","parts","apply","loggedMessage","logAndReturn","returnValue","getVisibility","visibilityFn","functionname","data","calculatedVisibility","getEvent","result","event","visibilityFunction","_internalCall","description","api","setData","nameParam","variantOrDataParam","dataParam","undefined","Error","on","fn","push","type","ignorePreviousRules","split","length","parseKey","rule","trigger","isVisible","JSON","stringify","requiredFn","requiredFnExists","requiredFnResult","visibilityFnKey","visibilityFnExists","visibilityFnResult","variantExists","visibilityOnlyNameFn","visibilityOnlyNameFnResult","defaultFn","defaultFnExists","defaultFnResult","setFlag","resultOrVariant","resultOrData","params","param1","param2","param3","param4","arguments","visibilityFnParams","visibility","requiredVisibility","setRequiredFlag","defaultVisibility","setDefaultFlag","addPlugin","plugin","includes","allPlugins","$plugins","_plugins","init"],"mappings":"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"}