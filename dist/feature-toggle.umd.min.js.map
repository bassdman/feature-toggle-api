{"version":3,"file":"feature-toggle.umd.min.js","sources":["../src/featureToggle.ts"],"sourcesContent":["interface OnConfiguration {\n    ignorePreviousRules:boolean\n}\n\ninterface OnEvent{\n    name: string,\n    variant: string,\n    data: any,\n    result?:boolean\n}\n\ninterface VisibilityConfig {\n    [key:string]:boolean | (()=>boolean),\n}\ninterface FeatureToggleConfig {\n    _plugins?: ((api)=>void)[]\n}\n\ninterface Rule {\n    name: string, \n    variant: string, \n    data: any,\n    _internalCall?: true,\n    description?: string\n}\n\ninterface FeatureToggleApi{\n    name: string,\n    setData( name: string,dataParam?: any ) : void;\n    setData( name: string,variant: string, dataParam?: any ) : void,\n    setData(nameParam: string, variantOrDataParam: string | { [key: string]: any },\n    dataParam?: any ) : void;\n\n    on( eventType: string, fn: (event: OnEvent) => void, config?: OnConfiguration): void;\n    trigger(eventtype:string,param?:any);\n    showLogs( showLogs?: boolean ) :void\n\n    isVisible(name:string, variant?:string, data?:any):boolean\n\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name:string,result:boolean | ((rule:Rule)=>boolean)) :void,\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name:string,variant:string|null,result: boolean | ((rule:Rule)=>boolean)):void\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name:string,variant:string|null,data:any,result:boolean | ((rule:Rule)=>boolean)):void,\n    /**\n     * @deprecated Use `featureToggle.setFlag` instead.\n     */\n    visibility(name:string, resultOrVariant: string | null| boolean | ((rule:Rule)=>boolean) , resultOrData?:any, result?:boolean | (()=>boolean)) :void\n\n    setFlag(name:string,result:boolean | ((rule:Rule)=>boolean)) :void,\n    setFlag(name:string,variant:string|null,result: boolean | ((rule:Rule)=>boolean)):void,\n    setFlag(name:string,variant:string|null,data:any,result:boolean | ((rule:Rule)=>boolean)):void,\n    setFlag(name:string, resultOrVariant: string | null| boolean | ((rule:Rule)=>boolean) , resultOrData?:any, result?:boolean | (()=>boolean)) :void\n\n    /**\n     * @deprecated Use `featureToggle.setRequiredFlag` instead.\n     */\n    requiredVisibility(fn:boolean | ((result:Rule)=>boolean)):void\n\n    /**\n     * @deprecated Use `featureToggle.setDefaultFlag` instead.\n     */\n    defaultVisibility(fn:boolean | ((result:Rule)=>boolean)):void\n\n    /**\n     * This rule will run first and only if it is true, the feature.setFlag() - rules apply.\n     * In other words: if the required-rule returns false, all feature.setFlag-rules return false - regardless of its normal result.\n     * @param fn \n     */\n    setRequiredFlag(fn:boolean | ((result:Rule)=>boolean)):void\n\n    /**\n     * This is the default-rule and will be overwritten by feature.setFlag() - rules.\n     * In other words: If feature.setFlag == false, the result of the defaultRule applies.\n     * @param fn DefaultRule\n     */\n    setDefaultFlag(fn:boolean | ((result:Rule)=>boolean)):void\n\n    addPlugin(plugin:((api)=>void))\n}\n\nfunction parseToFn(fnOrBool:boolean |((param?:any)=>boolean)) {\n    if (typeof fnOrBool == 'boolean')\n        return function () { return fnOrBool };\n\n    return fnOrBool;\n}\n\nfunction getKey(name:string, variant?:string) : string {\n    var _name = name.toLowerCase();\n    if (variant && typeof variant == 'string') {\n        _name += \"#\" + variant.toLowerCase();\n    }\n\n    return _name;\n}\n\nfunction initVisibilities(visibilities :VisibilityConfig= {}) {\n    const returnVisibilities = {};\n    Object.keys(visibilities).forEach(key => {\n        if(key.startsWith('_'))\n            return;\n        returnVisibilities[getKey(key)] = parseToFn(visibilities[key]);\n    });\n    return returnVisibilities;\n}\n\nfunction useFeatureToggle(visibilityConfig:VisibilityConfig={},config : FeatureToggleConfig ={}) :FeatureToggleApi{\n\n    const globals = {\n        datas: {},\n        listeners: {},\n        visibilities: initVisibilities(visibilityConfig),\n        showLogs: false,\n        usedPlugins: [],\n    }\n\n    function init(api){        \n        if(config._plugins)\n        {\n            if(!Array.isArray(config._plugins))\n                throw new Error('featuretoggleapi()-constructor: config.plugins must be an array.');\n            \n            config._plugins.forEach(plugin =>{\n                if(typeof plugin !== 'function')\n                    throw new Error('featuretoggleapi()-constructor: config.plugins needs functions as entries, not ' + typeof plugin + '.');\n                \n                addPlugin(plugin,api);\n            });\n        }\n\n        triggerEvent('init');\n    }\n\n    function addPlugin(plugin:(api)=>void,api):void\n    {\n        plugin(api);\n    }\n\n    function triggerEvent(eventtype:string,param?:any) {\n        (globals.listeners[eventtype] || []).forEach(listener => {\n            listener(param);\n        });\n    }\n\n    const log = function (message) {\n        if (!globals.showLogs)\n            return;\n\n        //Nur Browser k√∂nnen Syntaxhighlighting die anderen geben die Nachricht einfach aus und schneiden\n        //die styletags raus\n        if (typeof window === 'undefined') {\n            const loggedMessage = message.replace(/<b>/g, \"\");\n            console.log(loggedMessage);\n            return;\n        }\n\n        var hasBoldTag = message.indexOf('<b>') != -1;\n        var hasVisibleKeyword = message.indexOf('visible') != -1;\n        var hasHiddenKeyword = message.indexOf('hidden') != -1;\n\n        var _message = message.replace('visible', '%cvisible');\n        _message = _message.replace('hidden', '%chidden');\n\n        if (hasVisibleKeyword)\n            console.log(_message, \"color:green;font-weight:bold;\");\n        else if (hasHiddenKeyword)\n            console.log(_message, \"color:red;font-weight:bold;\");\n        else if (hasBoldTag) {\n            _message = _message.replace('<b>', '%c');\n            var parts = [_message, 'font-weight:bold;']\n            console.log.apply(null, parts);\n        }\n        else\n            console.log(message);\n    }\n\n    const logAndReturn = function (returnValue, message) {\n        log(message);\n        log('');\n        return returnValue;\n    }\n\n    const getVisibility = function (visibilityFn, functionname, name, variant, data) {\n        if (visibilityFn == null)\n            return undefined;\n\n        var calculatedVisibility = visibilityFn({ name: name, variant: variant, data: data });\n\n        if (typeof calculatedVisibility == 'boolean') {\n            return calculatedVisibility;\n        }\n\n        return logAndReturn(false, `The ${functionname} returns ${calculatedVisibility}. => Please return true or false. This result (and all non-boolean results) will return false.`);\n    }\n\n    function parseKey(key:string) : OnEvent{\n        const parts = key.split('#');\n        return {\n            name: parts[0],\n            variant: parts.length > 1 ? parts[1] : undefined,\n            data: globals.datas[key],\n        }\n    }\n\n    /*\n        the following calls are possible:\n        visibility(name,result);\n        visibility(name,variant,result);\n        visibility(name,variant,data,result);\n    \n        =>\n        param1: name\n        param2: result || variant\n        param3: result || data\n        param4: result\n    */\n    function visibilityFnParams(param1, param2, param3, param4) {\n        //name must always be set\n        if (param1 == undefined)\n            throw new Error('feature.visibility(): 1st parameter name must be defined');\n\n        if (arguments.length == 1)\n            throw new Error('feature.visibility(): 2nd parameter name must be a boolean or function, but is empty');\n\n        let name = param1, variant = null, data = null, result = null;\n        if (param3 == undefined && param4 == undefined) {\n            result = param2;\n        }\n        else if (param4 == undefined) {\n            variant = param2;\n            result = param3;\n        }\n        else {\n            variant = param2;\n            data = param3;\n            result = param4;\n        }\n\n        return {\n            name,\n            variant,\n            data,\n            result\n        }\n    }\n\n    function getEvent(name:string, variant:string, data?, result?:any) {\n\n        let event;\n\n        event = { name, variant, data };\n\n        event.key = getKey(event.name, event.variant);\n\n        if (result == null)\n            return event;\n\n        event.visibilityFunction = parseToFn(result);\n        event.result = event.visibilityFunction({ \n            name: event.name, \n            variant: event.variant, \n            data: event.data || {}, \n            _internalCall: true,\n            description:  'When attaching a function, the result must be calculated internally. You can filter this out with the _internalCall:true -Flag.'\n        })\n        return event;\n    }\n\n\n\n    function isVisible(name:string, variant?:string, data?:any):boolean {\n        const visibilities = globals.visibilities;\n\n        log(`\\nCheck Visibility of <b>Feature \"${name}\", variant \"${variant == undefined ? '' : variant}\"${data ? \" with data \" + JSON.stringify(data) : \"\"}.`);\n        if (name == undefined)\n            throw new Error('The attribute \"name\" is required for tag <feature></feature>. Example: <feature name=\"aname\"></feature>');\n\n        var requiredFn = visibilities['_required'];\n        var requiredFnExists = visibilities['_required'] != null;\n        var requiredFnResult = getVisibility(requiredFn, 'requiredVisibility', name, variant, data);\n\n        var visibilityFnKey = getKey(name, variant);\n        var visibilityFn = visibilities[visibilityFnKey];\n        var visibilityFnExists = visibilities[visibilityFnKey] != null;\n        var visibilityFnResult = getVisibility(visibilityFn, 'visibility function', name, variant, data);\n\n        var variantExists = variant != null;\n        var visibilityOnlyNameFnKey = getKey(name, null);\n        var visibilityOnlyNameFn = visibilities[visibilityOnlyNameFnKey];\n        var visibilityOnlyNameFnExists = visibilities[visibilityOnlyNameFnKey] != null;\n        var visibilityOnlyNameFnResult = getVisibility(visibilityOnlyNameFn, 'visibility function (only name)', name, variant, data);\n\n        var defaultFn = visibilities['_default'];\n        var defaultFnExists = visibilities['_default'] != null;\n        var defaultFnResult = getVisibility(defaultFn, 'defaultVisibility', name, variant, data);\n\n        if (!requiredFnExists)\n            log(\"No requiredVisibility rule specified for this feature.\");\n        else if (requiredFnExists && requiredFnResult === true)\n            log(\"The requiredVisibility rule returns true. This feature will be shown when no other rule rejects it.\")\n        else if (requiredFnExists && requiredFnResult === false)\n            return logAndReturn(false, \"The requiredVisibility rule returns false. This feature will be hidden.\");\n\n        if (visibilityFnExists)\n            return logAndReturn(visibilityFnResult, `The visibility rule returns ${visibilityFnResult}. This feature will be ${visibilityFnResult ? 'visible' : 'hidden'}.`);\n        log('No visibility rule found matching name and variant.');\n\n        if (variantExists && typeof visibilityOnlyNameFnResult == 'boolean')\n            return logAndReturn(visibilityOnlyNameFnResult, `Found a visibility rule for name ${name} without variants. The rule returns ${visibilityOnlyNameFnResult}. => This feature will be ${visibilityOnlyNameFnResult ? 'visible' : 'hidden'}.`);\n        else if (variantExists)\n            log(`No rules found for name ${name} without variants.`)\n\n\n        if (defaultFnExists)\n            return logAndReturn(defaultFnResult, `Found a defaultVisibility rule. The rule returns ${defaultFnResult}. => This feature will be ${defaultFnResult ? 'visible' : 'hidden'}.`);\n        log(`No default rule found.`)\n\n        if (requiredFnExists)\n            return logAndReturn(true, `Only the requiredVisibility rule was found. This returned true. => This feature will be visible.`);\n\n        return logAndReturn(false, 'No rules were found. This feature will be hidden.');\n    }\n\n    const api : FeatureToggleApi = {\n        name: 'feature-toggle-api',\n        setData: function (nameParam, variantOrDataParam, dataParam?):void {\n            if (nameParam == undefined)\n                throw new Error('setData(): The name must of the feature must be defined, but ist undefined');\n\n            const variant = (dataParam != undefined ? variantOrDataParam : undefined) as string;\n            const data = dataParam || variantOrDataParam;\n\n            const event = getEvent(nameParam, variant, data);\n\n            globals.datas[event.key] = event.data;\n\n            triggerEvent('visibilityrule',event);\n        },\n        on: function (eventtype:string, fn, config?) {\n            globals.listeners[eventtype] = globals.listeners[eventtype] || [];\n            globals.listeners[eventtype].push(fn);\n\n            triggerEvent('registerEvent',{\n                type: eventtype\n            })\n            if (config != undefined && config.ignorePreviousRules)\n                return;\n\n            Object.keys(globals.visibilities).forEach(key => {\n                const event = parseKey(key);\n                const rule = globals.visibilities[key];\n                event.result = rule(event);\n                fn(event);\n            });\n        },\n        trigger: triggerEvent,\n        showLogs: function (showLogs?:boolean):void {\n            globals.showLogs = showLogs == undefined ? true : showLogs;\n        },\n        isVisible,\n\n        /**\n            the following function calls are possible:\n            visibility(name,result);\n            visibility(name,variant,result);\n            visibility(name,variant,data,result);\n         */\n        setFlag(name, resultOrVariant, resultOrData?, result?){\n            const params = visibilityFnParams(name, resultOrVariant, resultOrData, result);\n            const event = getEvent(params.name, params.variant, params.data, params.result);\n    \n            globals.visibilities[event.key] = event.visibilityFunction;\n            globals.datas[event.key] = event.data;\n            triggerEvent('visibilityrule',event);\n        },\n        visibility: function (name, resultOrVariant, resultOrData?, result?) {\n            console.log('featureToggle.visibility is deprecated. use featureToggle.setVisibility instead. This function will be removed in one of the next major versions.');\n\n            api.setFlag(name,resultOrVariant,resultOrData,result);\n        },\n        requiredVisibility: function (fn) {\n            console.log('featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions.');\n\n            api.setRequiredFlag(fn);\n        },\n        defaultVisibility: function (fn) {\n            console.log('featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions.');\n\n            api.setDefaultFlag(fn);\n        },\n        setRequiredFlag(fn){\n            if (typeof fn != \"function\")\n                throw new Error('feature.setRequiredFlag(): 1st parameter must be a function, but is ' + typeof fn);\n            \n            globals.visibilities['_required'] = parseToFn(fn);\n        },\n        setDefaultFlag(fn){\n            if (typeof fn != \"function\")\n                throw new Error('feature.defaultVisibility(): 1st parameter must be a function, but is ' + typeof fn);\n            \n            globals.visibilities['_default'] = parseToFn(fn);\n        },\n        addPlugin: function(plugin){\n            if(globals.usedPlugins.includes(plugin))\n                return;\n            \n            addPlugin(plugin,api);  \n            globals.usedPlugins.push(plugin);\n        },\n    };\n    init(api);\napi.setDefaultFlag\n    return api;\n}\n\nexport {\n    useFeatureToggle\n}"],"names":["parseToFn","fnOrBool","getKey","name","variant","_name","toLowerCase","initVisibilities","visibilities","returnVisibilities","Object","keys","forEach","key","startsWith","visibilityConfig","config","globals","datas","listeners","showLogs","usedPlugins","addPlugin","plugin","api","triggerEvent","eventtype","param","listener","log","message","window","hasBoldTag","indexOf","hasVisibleKeyword","hasHiddenKeyword","_message","replace","console","parts","apply","loggedMessage","logAndReturn","returnValue","getVisibility","visibilityFn","functionname","data","calculatedVisibility","getEvent","result","event","visibilityFunction","_internalCall","description","setData","nameParam","variantOrDataParam","dataParam","undefined","Error","on","fn","push","type","ignorePreviousRules","split","length","parseKey","rule","trigger","isVisible","JSON","stringify","requiredFn","requiredFnExists","requiredFnResult","visibilityFnKey","visibilityFnExists","visibilityFnResult","variantExists","visibilityOnlyNameFn","visibilityOnlyNameFnResult","defaultFn","defaultFnExists","defaultFnResult","setFlag","resultOrVariant","resultOrData","params","param1","param2","param3","param4","arguments","visibilityFnParams","visibility","requiredVisibility","setRequiredFlag","defaultVisibility","setDefaultFlag","includes","_plugins","Array","isArray","init"],"mappings":"wPAwFA,SAASA,EAAUC,GACf,MAAuB,kBAAZA,EACA,WAAc,OAAOA,CAAU,EAEnCA,CACX,CAEA,SAASC,EAAOC,EAAaC,GACzB,IAAIC,EAAQF,EAAKG,cAKjB,OAJIF,GAA6B,iBAAXA,IAClBC,GAAS,IAAMD,EAAQE,eAGpBD,CACX,CAEA,SAASE,EAAiBC,EAAgC,IACtD,MAAMC,EAAqB,CAAE,EAM7B,OALAC,OAAOC,KAAKH,GAAcI,SAAQC,IAC3BA,EAAIC,WAAW,OAElBL,EAAmBP,EAAOW,IAAQb,EAAUQ,EAAaK,IAAK,IAE3DJ,CACX,oBAEA,SAA0BM,EAAkC,GAAGC,EAA8B,CAAA,GAEzF,MAAMC,EAAU,CACZC,MAAO,CAAE,EACTC,UAAW,CAAE,EACbX,aAAcD,EAAiBQ,GAC/BK,UAAU,EACVC,YAAa,IAoBjB,SAASC,EAAUC,EAAmBC,GAElCD,EAAOC,GAGX,SAASC,EAAaC,EAAiBC,IAClCV,EAAQE,UAAUO,IAAc,IAAId,SAAQgB,IACzCA,EAASD,EAAM,IAIvB,MAAME,EAAM,SAAUC,GAClB,GAAKb,EAAQG,SAKb,GAAsB,oBAAXW,OAAX,CAMA,IAAIC,GAAyC,GAA5BF,EAAQG,QAAQ,OAC7BC,GAAoD,GAAhCJ,EAAQG,QAAQ,WACpCE,GAAkD,GAA/BL,EAAQG,QAAQ,UAEnCG,EAAWN,EAAQO,QAAQ,UAAW,aAG1C,GAFAD,EAAWA,EAASC,QAAQ,SAAU,YAElCH,EACAI,QAAQT,IAAIO,EAAU,sCACrB,GAAID,EACLG,QAAQT,IAAIO,EAAU,oCACrB,GAAIJ,EAAY,CAEjB,IAAIO,EAAQ,CADZH,EAAWA,EAASC,QAAQ,MAAO,MACZ,qBACvBC,QAAQT,IAAIW,MAAM,KAAMD,QAGxBD,QAAQT,IAAIC,OAvBhB,CACI,MAAMW,EAAgBX,EAAQO,QAAQ,OAAQ,IAC9CC,QAAQT,IAAIY,GAsBnB,EAEKC,EAAe,SAAUC,EAAab,GAGxC,OAFAD,EAAIC,GACJD,EAAI,IACGc,CACV,EAEKC,EAAgB,SAAUC,EAAcC,EAAc3C,EAAMC,EAAS2C,GACvE,GAAoB,MAAhBF,EAAJ,CAGA,IAAIG,EAAuBH,EAAa,CAAE1C,KAAMA,EAAMC,QAASA,EAAS2C,KAAMA,IAE9E,MAAmC,kBAAxBC,EACAA,EAGJN,GAAa,EAAO,OAAOI,aAAwBE,kGARtC,CASvB,EAqDD,SAASC,EAAS9C,EAAaC,EAAgB2C,EAAOG,GAElD,IAAIC,EAMJ,OAJAA,EAAQ,CAAEhD,OAAMC,UAAS2C,QAEzBI,EAAMtC,IAAMX,EAAOiD,EAAMhD,KAAMgD,EAAM/C,SAEvB,MAAV8C,IAGJC,EAAMC,mBAAqBpD,EAAUkD,GACrCC,EAAMD,OAASC,EAAMC,mBAAmB,CACpCjD,KAAMgD,EAAMhD,KACZC,QAAS+C,EAAM/C,QACf2C,KAAMI,EAAMJ,MAAQ,CAAE,EACtBM,eAAe,EACfC,YAAc,qIARPH,EAoEf,MAAM3B,EAAyB,CAC3BrB,KAAM,qBACNoD,QAAS,SAAUC,EAAWC,EAAoBC,GAC9C,GAAiBC,MAAbH,EACA,MAAM,IAAII,MAAM,8EAEpB,MAGMT,EAAQF,EAASO,EAHOG,MAAbD,EAAyBD,OAAqBE,EAClDD,GAAaD,GAI1BxC,EAAQC,MAAMiC,EAAMtC,KAAOsC,EAAMJ,KAEjCtB,EAAa,iBAAiB0B,EACjC,EACDU,GAAI,SAAUnC,EAAkBoC,EAAI9C,GAChCC,EAAQE,UAAUO,GAAaT,EAAQE,UAAUO,IAAc,GAC/DT,EAAQE,UAAUO,GAAWqC,KAAKD,GAElCrC,EAAa,gBAAgB,CACzBuC,KAAMtC,IAEIiC,MAAV3C,GAAuBA,EAAOiD,qBAGlCvD,OAAOC,KAAKM,EAAQT,cAAcI,SAAQC,IACtC,MAAMsC,EA1JlB,SAAkBtC,GACd,MAAM0B,EAAQ1B,EAAIqD,MAAM,KACxB,MAAO,CACH/D,KAAMoC,EAAM,GACZnC,QAASmC,EAAM4B,OAAS,EAAI5B,EAAM,QAAKoB,EACvCZ,KAAM9B,EAAQC,MAAML,IAqJFuD,CAASvD,GACjBwD,EAAOpD,EAAQT,aAAaK,GAClCsC,EAAMD,OAASmB,EAAKlB,GACpBW,EAAGX,EAAM,GAEhB,EACDmB,QAAS7C,EACTL,SAAU,SAAUA,GAChBH,EAAQG,SAAuBuC,MAAZvC,GAA+BA,CACrD,EACDmD,UAzFJ,SAAmBpE,EAAaC,EAAiB2C,GAC7C,MAAMvC,EAAeS,EAAQT,aAG7B,GADAqB,EAAI,qCAAqC1B,gBAA8BwD,MAAXvD,EAAuB,GAAKA,KAAW2C,EAAO,cAAgByB,KAAKC,UAAU1B,GAAQ,OACrIY,MAARxD,EACA,MAAM,IAAIyD,MAAM,2GAEpB,IAAIc,EAAalE,EAAwB,UACrCmE,EAAgD,MAA7BnE,EAAwB,UAC3CoE,EAAmBhC,EAAc8B,EAAY,qBAAsBvE,EAAMC,EAAS2C,GAElF8B,EAAkB3E,EAAOC,EAAMC,GAC/ByC,EAAerC,EAAaqE,GAC5BC,EAAsD,MAAjCtE,EAAaqE,GAClCE,EAAqBnC,EAAcC,EAAc,sBAAuB1C,EAAMC,EAAS2C,GAEvFiC,EAA2B,MAAX5E,EAEhB6E,EAAuBzE,EADGN,EAAOC,EAAM,OAGvC+E,EAA6BtC,EAAcqC,EAAsB,kCAAmC9E,EAAMC,EAAS2C,GAEnHoC,EAAY3E,EAAuB,SACnC4E,EAA8C,MAA5B5E,EAAuB,SACzC6E,EAAkBzC,EAAcuC,EAAW,oBAAqBhF,EAAMC,EAAS2C,GAEnF,GAAK4B,GAEA,GAAIA,IAAyC,IAArBC,EACzB/C,EAAI,4GACH,GAAI8C,IAAyC,IAArBC,EACzB,OAAOlC,GAAa,EAAO,gFAJ3Bb,EAAI,0DAMR,OAAIiD,EACOpC,EAAaqC,EAAoB,+BAA+BA,2BAA4CA,EAAqB,UAAY,cACxJlD,EAAI,uDAEAmD,GAAsD,kBAA9BE,EACjBxC,EAAawC,EAA4B,oCAAoC/E,wCAA2C+E,8BAAuDA,EAA6B,UAAY,cAC1NF,GACLnD,EAAI,2BAA2B1B,uBAG/BiF,EACO1C,EAAa2C,EAAiB,oDAAoDA,8BAA4CA,EAAkB,UAAY,cACvKxD,EAAI,0BAEA8C,EACOjC,GAAa,EAAM,oGAEvBA,GAAa,EAAO,yDA+C3B,OAAA4C,CAAQnF,EAAMoF,EAAiBC,EAAetC,GAC1C,MAAMuC,EAxJd,SAA4BC,EAAQC,EAAQC,EAAQC,GAEhD,GAAclC,MAAV+B,EACA,MAAM,IAAI9B,MAAM,4DAEpB,GAAwB,GAApBkC,UAAU3B,OACV,MAAM,IAAIP,MAAM,wFAEpB,IAAmBxD,EAAU,KAAM2C,EAAO,KAAMG,EAAS,KAczD,OAbcS,MAAViC,GAAiCjC,MAAVkC,EACvB3C,EAASyC,EAEMhC,MAAVkC,GACLzF,EAAUuF,EACVzC,EAAS0C,IAGTxF,EAAUuF,EACV5C,EAAO6C,EACP1C,EAAS2C,GAGN,CACH1F,KAfOuF,EAgBPtF,UACA2C,OACAG,UA8He6C,CAAmB5F,EAAMoF,EAAiBC,EAActC,GACjEC,EAAQF,EAASwC,EAAOtF,KAAMsF,EAAOrF,QAASqF,EAAO1C,KAAM0C,EAAOvC,QAExEjC,EAAQT,aAAa2C,EAAMtC,KAAOsC,EAAMC,mBACxCnC,EAAQC,MAAMiC,EAAMtC,KAAOsC,EAAMJ,KACjCtB,EAAa,iBAAiB0B,EACjC,EACD6C,WAAY,SAAU7F,EAAMoF,EAAiBC,EAAetC,GACxDZ,QAAQT,IAAI,qJAEZL,EAAI8D,QAAQnF,EAAKoF,EAAgBC,EAAatC,EACjD,EACD+C,mBAAoB,SAAUnC,GAC1BxB,QAAQT,IAAI,+JAEZL,EAAI0E,gBAAgBpC,EACvB,EACDqC,kBAAmB,SAAUrC,GACzBxB,QAAQT,IAAI,+JAEZL,EAAI4E,eAAetC,EACtB,EACD,eAAAoC,CAAgBpC,GACZ,GAAiB,mBAANA,EACP,MAAM,IAAIF,MAAM,8EAAgFE,GAEpG7C,EAAQT,aAAwB,UAAIR,EAAU8D,EACjD,EACD,cAAAsC,CAAetC,GACX,GAAiB,mBAANA,EACP,MAAM,IAAIF,MAAM,gFAAkFE,GAEtG7C,EAAQT,aAAuB,SAAIR,EAAU8D,EAChD,EACDxC,UAAW,SAASC,GACbN,EAAQI,YAAYgF,SAAS9E,KAGhCD,EAAUC,EAAOC,GACjBP,EAAQI,YAAY0C,KAAKxC,GAC5B,GAIL,OAxSA,SAAcC,GACV,GAAGR,EAAOsF,SACV,CACI,IAAIC,MAAMC,QAAQxF,EAAOsF,UACrB,MAAM,IAAI1C,MAAM,oEAEpB5C,EAAOsF,SAAS1F,SAAQW,IACpB,GAAqB,mBAAXA,EACN,MAAM,IAAIqC,MAAM,yFAA2FrC,EAAS,KAExHD,EAAUC,EAAOC,EAAI,IAI7BC,EAAa,QAwRjBgF,CAAKjF,GACTA,EAAI4E,eACO5E,CACX"}