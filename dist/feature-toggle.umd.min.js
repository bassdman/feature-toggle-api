!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i((e="undefined"!=typeof globalThis?globalThis:e||self).useFeatureToggle={})}(this,(function(e){"use strict";function i(e){return"boolean"==typeof e?function(){return e}:e}function t(e,i){var t=e.toLowerCase();return i&&"string"==typeof i&&(t+="#"+i.toLowerCase()),t}function n(e={}){const n={};return Object.keys(e).forEach((r=>{r.startsWith("_")||(n[t(r)]=i(e[r]))})),n}e.useFeatureToggle=function(e={},r={}){const l={datas:{},listeners:{},visibilities:n(e),showLogs:!1,usedPlugins:[]};function s(e,i){e(i)}function u(e,i){(l.listeners[e]||[]).forEach((e=>{e(i)}))}const o=function(e){if(l.showLogs)if("undefined"!=typeof window){var i=-1!=e.indexOf("<b>"),t=-1!=e.indexOf("visible"),n=-1!=e.indexOf("hidden"),r=e.replace("visible","%cvisible");if(r=r.replace("hidden","%chidden"),t)console.log(r,"color:green;font-weight:bold;");else if(n)console.log(r,"color:red;font-weight:bold;");else if(i){var s=[r=r.replace("<b>","%c"),"font-weight:bold;"];console.log.apply(null,s)}else console.log(e)}else{const i=e.replace(/<b>/g,"");console.log(i)}},a=function(e,i){return o(i),o(""),e},f=function(e,i,t,n,r){if(null!=e){var l=e({name:t,variant:n,data:r});return"boolean"==typeof l?l:a(!1,`The ${i} returns ${l}. => Please return true or false. This result (and all non-boolean results) will return false.`)}};function d(e,n,r,l){let s;return s={name:e,variant:n,data:r},s.key=t(s.name,s.variant),null==l||(s.visibilityFunction=i(l),s.result=s.visibilityFunction({name:s.name,variant:s.variant,data:s.data||{},_internalCall:!0,description:"When attaching a function, the result must be calculated internally. You can filter this out with the _internalCall:true -Flag."})),s}const c={name:"feature-toggle-api",setData:function(e,i,t){if(null==e)throw new Error("setData(): The name must of the feature must be defined, but ist undefined");const n=d(e,null!=t?i:void 0,t||i);l.datas[n.key]=n.data,u("visibilityrule",n)},on:function(e,i,t){l.listeners[e]=l.listeners[e]||[],l.listeners[e].push(i),u("registerEvent",{type:e}),null!=t&&t.ignorePreviousRules||Object.keys(l.visibilities).forEach((e=>{const t=function(e){const i=e.split("#");return{name:i[0],variant:i.length>1?i[1]:void 0,data:l.datas[e]}}(e),n=l.visibilities[e];t.result=n(t),i(t)}))},trigger:u,showLogs:function(e){l.showLogs=null==e||e},isVisible:function(e,i,n){const r=l.visibilities;if(o(`\nCheck Visibility of <b>Feature "${e}", variant "${null==i?"":i}"${n?" with data "+JSON.stringify(n):""}.`),null==e)throw new Error('The attribute "name" is required for tag <feature></feature>. Example: <feature name="aname"></feature>');var s=r._required,u=null!=r._required,d=f(s,"requiredVisibility",e,i,n),c=t(e,i),b=r[c],h=null!=r[c],g=f(b,"visibility function",e,i,n),y=null!=i,v=r[t(e,null)],p=f(v,"visibility function (only name)",e,i,n),w=r._default,m=null!=r._default,T=f(w,"defaultVisibility",e,i,n);if(u){if(u&&!0===d)o("The requiredVisibility rule returns true. This feature will be shown when no other rule rejects it.");else if(u&&!1===d)return a(!1,"The requiredVisibility rule returns false. This feature will be hidden.")}else o("No requiredVisibility rule specified for this feature.");return h?a(g,`The visibility rule returns ${g}. This feature will be ${g?"visible":"hidden"}.`):(o("No visibility rule found matching name and variant."),y&&"boolean"==typeof p?a(p,`Found a visibility rule for name ${e} without variants. The rule returns ${p}. => This feature will be ${p?"visible":"hidden"}.`):(y&&o(`No rules found for name ${e} without variants.`),m?a(T,`Found a defaultVisibility rule. The rule returns ${T}. => This feature will be ${T?"visible":"hidden"}.`):(o("No default rule found."),u?a(!0,"Only the requiredVisibility rule was found. This returned true. => This feature will be visible."):a(!1,"No rules were found. This feature will be hidden."))))},setFlag(e,i,t,n){const r=function(e,i,t,n){if(null==e)throw new Error("feature.visibility(): 1st parameter name must be defined");if(1==arguments.length)throw new Error("feature.visibility(): 2nd parameter name must be a boolean or function, but is empty");let r=null,l=null,s=null;return null==t&&null==n?s=i:null==n?(r=i,s=t):(r=i,l=t,s=n),{name:e,variant:r,data:l,result:s}}(e,i,t,n),s=d(r.name,r.variant,r.data,r.result);l.visibilities[s.key]=s.visibilityFunction,l.datas[s.key]=s.data,u("visibilityrule",s)},visibility:function(e,i,t,n){console.log("featureToggle.visibility is deprecated. use featureToggle.setVisibility instead. This function will be removed in one of the next major versions."),c.setFlag(e,i,t,n)},requiredVisibility:function(e){console.log("featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions."),c.setRequiredFlag(e)},defaultVisibility:function(e){console.log("featureToggle.requiredVisibility is deprecated. use featureToggle.setRequiredFlag instead. This function will be removed in one of the next major versions."),c.setDefaultFlag(e)},setRequiredFlag(e){if("function"!=typeof e)throw new Error("feature.setRequiredFlag(): 1st parameter must be a function, but is "+typeof e);l.visibilities._required=i(e)},setDefaultFlag(e){if("function"!=typeof e)throw new Error("feature.defaultVisibility(): 1st parameter must be a function, but is "+typeof e);l.visibilities._default=i(e)},addPlugin:function(e){l.usedPlugins.includes(e)||(s(e,c),l.usedPlugins.push(e))}};return function(e){if(r._plugins){if(!Array.isArray(r._plugins))throw new Error("featuretoggleapi()-constructor: config.plugins must be an array.");r._plugins.forEach((i=>{if("function"!=typeof i)throw new Error("featuretoggleapi()-constructor: config.plugins needs functions as entries, not "+typeof i+".");s(i,e)}))}u("init")}(c),c.setDefaultFlag,c}}));
//# sourceMappingURL=feature-toggle.umd.min.js.map
